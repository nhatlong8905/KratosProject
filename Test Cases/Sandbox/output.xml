<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.6.8 on win32)" generated="20200615 10:45:25.694" rpa="false">
<suite id="s1" name="Data Driven With Test Template" source="C:\Users\hung.vo\MN300-RF\MN300-BackEnd\Test Cases\Sandbox\data_driven_with_test_template.robot">
<kw name="initialize" library="init" type="setup">
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>@{BaseURL}</arg>
<arg>https://10.244.125.77</arg>
</arguments>
<msg timestamp="20200615 10:45:26.520" level="INFO">@{BaseURL} = [ https://10.244.125.77 ]</msg>
<status status="PASS" starttime="20200615 10:45:26.519" endtime="20200615 10:45:26.520"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>&amp;{credential}</arg>
<arg>user=admin</arg>
<arg>pass=Krt123Krt123@#</arg>
</arguments>
<msg timestamp="20200615 10:45:26.521" level="INFO">&amp;{credential} = { user=admin | pass=Krt123Krt123@# }</msg>
<status status="PASS" starttime="20200615 10:45:26.520" endtime="20200615 10:45:26.521"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>appdata</arg>
<arg>@{BaseURL}</arg>
<arg>verify=true</arg>
</arguments>
<msg timestamp="20200615 10:45:26.522" level="INFO">Creating Session using : alias=appdata, url=https://10.244.125.77, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20200615 10:45:26.521" endtime="20200615 10:45:26.522"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>@{session}</arg>
<arg>appdata</arg>
</arguments>
<msg timestamp="20200615 10:45:26.522" level="INFO">@{session} = [ appdata ]</msg>
<status status="PASS" starttime="20200615 10:45:26.522" endtime="20200615 10:45:26.522"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>@{ip}</arg>
<arg>10.244.125.77</arg>
</arguments>
<msg timestamp="20200615 10:45:26.523" level="INFO">@{ip} = [ 10.244.125.77 ]</msg>
<status status="PASS" starttime="20200615 10:45:26.522" endtime="20200615 10:45:26.523"></status>
</kw>
<status status="PASS" starttime="20200615 10:45:26.519" endtime="20200615 10:45:26.523"></status>
</kw>
<test id="s1-t1" name="Tests_sample_datadriven">
<kw name="Checkmultiple_Login">
<arguments>
<arg>admin</arg>
<arg>Krt123Krt123@#</arg>
</arguments>
<kw name="Disable Warnings" library="urllib3">
<doc>Helper for quickly disabling all urllib3 warnings.</doc>
<status status="PASS" starttime="20200615 10:45:26.524" endtime="20200615 10:45:26.524"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20200615 10:45:26.524" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20200615 10:45:26.524" endtime="20200615 10:45:26.524"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>user=${user}</arg>
<arg>password=${password}</arg>
</arguments>
<assign>
<var>&amp;{data}</var>
</assign>
<msg timestamp="20200615 10:45:26.525" level="INFO">&amp;{data} = { user=admin | password=Krt123Krt123@# }</msg>
<status status="PASS" starttime="20200615 10:45:26.524" endtime="20200615 10:45:26.525"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>@{session}</arg>
<arg>/rest/Token</arg>
<arg>headers=${headers}</arg>
<arg>json=${data}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200615 10:45:27.056" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:852)'),)': /rest/Token</msg>
<msg timestamp="20200615 10:45:27.610" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:852)'),)': /rest/Token</msg>
<msg timestamp="20200615 10:45:28.369" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:852)'),)': /rest/Token</msg>
<msg timestamp="20200615 10:45:28.731" level="FAIL">SSLError: HTTPSConnectionPool(host='10.244.125.77', port=443): Max retries exceeded with url: /rest/Token (Caused by SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:852)'),))</msg>
<status status="FAIL" starttime="20200615 10:45:26.525" endtime="20200615 10:45:28.731"></status>
</kw>
<status status="FAIL" starttime="20200615 10:45:26.524" endtime="20200615 10:45:28.732"></status>
</kw>
<kw name="Checkmultiple_Login">
<arguments>
<arg>admin</arg>
<arg>Krt123Krt123@#</arg>
</arguments>
<kw name="Disable Warnings" library="urllib3">
<doc>Helper for quickly disabling all urllib3 warnings.</doc>
<status status="PASS" starttime="20200615 10:45:28.732" endtime="20200615 10:45:28.732"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20200615 10:45:28.733" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20200615 10:45:28.733" endtime="20200615 10:45:28.733"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>user=${user}</arg>
<arg>password=${password}</arg>
</arguments>
<assign>
<var>&amp;{data}</var>
</assign>
<msg timestamp="20200615 10:45:28.733" level="INFO">&amp;{data} = { user=admin | password=Krt123Krt123@# }</msg>
<status status="PASS" starttime="20200615 10:45:28.733" endtime="20200615 10:45:28.734"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>@{session}</arg>
<arg>/rest/Token</arg>
<arg>headers=${headers}</arg>
<arg>json=${data}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200615 10:45:29.115" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:852)'),)': /rest/Token</msg>
<msg timestamp="20200615 10:45:29.687" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:852)'),)': /rest/Token</msg>
<msg timestamp="20200615 10:45:30.468" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:852)'),)': /rest/Token</msg>
<msg timestamp="20200615 10:45:30.884" level="FAIL">SSLError: HTTPSConnectionPool(host='10.244.125.77', port=443): Max retries exceeded with url: /rest/Token (Caused by SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:852)'),))</msg>
<status status="FAIL" starttime="20200615 10:45:28.734" endtime="20200615 10:45:30.885"></status>
</kw>
<status status="FAIL" starttime="20200615 10:45:28.732" endtime="20200615 10:45:30.886"></status>
</kw>
<status status="FAIL" starttime="20200615 10:45:26.523" endtime="20200615 10:45:30.888" critical="yes">Several failures occurred:

1) SSLError: HTTPSConnectionPool(host='10.244.125.77', port=443): Max retries exceeded with url: /rest/Token (Caused by SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:852)'),))

2) SSLError: HTTPSConnectionPool(host='10.244.125.77', port=443): Max retries exceeded with url: /rest/Token (Caused by SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:852)'),))</status>
</test>
<status status="FAIL" starttime="20200615 10:45:25.699" endtime="20200615 10:45:30.891"></status>
</suite>
<statistics>
<total>
<stat pass="0" fail="1">Critical Tests</stat>
<stat pass="0" fail="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" id="s1" name="Data Driven With Test Template">Data Driven With Test Template</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20200615 10:45:27.056" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:852)'),)': /rest/Token</msg>
<msg timestamp="20200615 10:45:27.610" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:852)'),)': /rest/Token</msg>
<msg timestamp="20200615 10:45:28.369" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:852)'),)': /rest/Token</msg>
<msg timestamp="20200615 10:45:29.115" level="WARN">Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:852)'),)': /rest/Token</msg>
<msg timestamp="20200615 10:45:29.687" level="WARN">Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:852)'),)': /rest/Token</msg>
<msg timestamp="20200615 10:45:30.468" level="WARN">Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:852)'),)': /rest/Token</msg>
</errors>
</robot>
